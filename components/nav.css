@property --nav-depth {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}

@layer components {
	nav {
		display: flex;
		flex-flow: column;
		--nav-depth: -1;

		& :is(ul, ol, li) { display: contents; }

		& :is(ul, ol) {
			/* --nav-depth: calc(inherit + 1); */
			--nav-depth: 0;
		}

		a {
			line-height: 2em;
			padding-left: calc(1em + calc(1.4em * var(--nav-depth, 0)));
			border-left: var(--line-width, .2rem) solid var(--hr-color, #6662);
			transition:
				color .2s;
			color: inherit;
			text-decoration: unset;

			&:hover {
				border-color: var(--color, orange);
				color: var(--color, orange);
			}
		}

		.active {
			border-color: var(--color, orange);
			font-weight: bold;
		}

		& details {
			summary::before { display: none; }
			:is(ul, ol) {
				flex-flow: column;
				display: flex;
				padding-left: 0;
			}
		}

		&.bar {
			header > & { height: var(--header-height) }

			all: unset;
			/* Placement */
			flex: max-content;
			/* Layout */
			display: flex;
			align-items: center;

			&.right {
				justify-content: flex-end;
			}

			:is(ul, ol, li) { display: contents; }

			a {
				transition: color .2s;
				color: inherit;
				text-decoration: unset;

				&:hover {
					color: var(--color, orange);
					border-color: var(--color, orange);
				}

				border: 0 solid var(--hr-color);
			}

			&.underlined a {
				border-bottom-width: .2em;
			}

			&.overlined a {
				border-top-width: .2em;
			}

			a {
				height: 100%;
				padding: .6em;
				margin: 0px;
				display: flex;
				align-items: center;
			}
		}

		:is(html,body)[scroll="0"] header nav.bar.underlined a:not(:hover) { border-bottom-color: transparent }
	}
}
